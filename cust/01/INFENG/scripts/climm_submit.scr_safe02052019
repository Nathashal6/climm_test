<--start
trace on

###################################################################
################### CREATE REPOSITORIES AND PRINT #################
###################################################################

		if (repexists("CUST") == 0) then
				createrep("CUST")
		endif

		if (classexists("CUST", "CLIMM") == 0) then
				createclass("CUST", "CLIMM", 5)
		endif


	lv_r = urhk_b2k_printRepos("BANCS")
	print(lv_r)

###################################################################
################### Fetching field values from frontend ###########
###################################################################

CUST.CLIMM.isError = "N"
CUST.CLIMM.successMsg = ""
CUST.CLIMM.errMsg = ""

	if(fieldexists(BANCS.INPUT.funcCode) ==0) THEN
		CUST.CLIMM.funcCode = ""
	else
		CUST.CLIMM.funcCode = BANCS.INPUT.funcCode
	endif
	
	if(fieldexists(BANCS.INPUT.cifId) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "CIF Id is Mandatory.^cifId"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.cifId = BANCS.INPUT.cifId
	endif
	
	if(fieldexists(BANCS.INPUT.assetId) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Asset Id is Mandatory.^assetId"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.assetId = BANCS.INPUT.assetId
	endif
	
	if(fieldexists(BANCS.INPUT.assetGrpId) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Asset Group Id is Mandatory.^assetGrpId"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.assetGrpId = BANCS.INPUT.assetGrpId
	endif
	
	if(fieldexists(BANCS.INPUT.insName) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Insurance Company Name is Mandatory.^insName"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.insName = BANCS.INPUT.insName
	endif
	
	if(fieldexists(BANCS.INPUT.policyType) ==0) THEN
		CUST.CLIMM.policyType = ""
	else
		CUST.CLIMM.policyType = BANCS.INPUT.policyType
	endif
	
	if(fieldexists(BANCS.INPUT.insProvider) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Insurance Provider is Mandatory.^insProvider"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.insProvider = BANCS.INPUT.insProvider
	endif
	
	if(fieldexists(BANCS.INPUT.startDate) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Policy Start Date is Mandatory.^startDate"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.startDate = BANCS.INPUT.startDate
	endif
	
	if(fieldexists(BANCS.INPUT.endDate) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Policy End Date is Mandatory.^endDate"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.endDate = BANCS.INPUT.endDate
	endif
	
	if(fieldexists(BANCS.INPUT.noteNo) ==0) THEN
		CUST.CLIMM.noteNo = ""
	else
		CUST.CLIMM.noteNo = BANCS.INPUT.noteNo
	endif
	
	if(fieldexists(BANCS.INPUT.expiryDate) ==0) THEN
		CUST.CLIMM.expiryDate = ""
	else
		CUST.CLIMM.expiryDate = BANCS.INPUT.expiryDate
	endif
	
	if(fieldexists(BANCS.INPUT.credAmt) ==0) THEN
		CUST.CLIMM.credAmt = 0
	else
		CUST.CLIMM.credAmt = BANCS.INPUT.credAmt
	endif
	
	if(fieldexists(BANCS.INPUT.comissionAmt) ==0) THEN
		CUST.CLIMM.comissionAmt = ""
	else
		CUST.CLIMM.comissionAmt = BANCS.INPUT.comissionAmt
	endif
	
	if(fieldexists(BANCS.INPUT.insAmt) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Insurance Amount is Mandatory.^insAmt"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.insAmt = BANCS.INPUT.insAmt
	endif
	
	if(fieldexists(BANCS.INPUT.premiumAmt) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Premium Amount is Mandatory.^premiumAmt"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.premiumAmt = BANCS.INPUT.premiumAmt
	endif
	
	if(fieldexists(BANCS.INPUT.credPeriod) ==0) THEN
		CUST.CLIMM.credPeriod = 0
	else
		CUST.CLIMM.credPeriod = BANCS.INPUT.credPeriod
	endif
	
	if(fieldexists(BANCS.INPUT.insId) ==0) THEN
		CUST.CLIMM.insId = ""
	else
		CUST.CLIMM.insId = BANCS.INPUT.insId
	endif
	
	if(fieldexists(BANCS.INPUT.insPolicyNo) ==0) THEN
		BANCS.INPUT.insPolicyNo = ""
	else
		CUST.CLIMM.insPolicyNo = BANCS.INPUT.insPolicyNo
	endif
	
	if(fieldexists(BANCS.INPUT.policyDescA) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Policy Desc is Mandatory.^policyDescA"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.policyDescA = BANCS.INPUT.policyDescA
	endif
	
	if(fieldexists(BANCS.INPUT.chekValA) ==0) THEN
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Cover Type Value is Mandatory.^checkValA"			
		GOTO ENDOFSCRIPT
	else
		CUST.CLIMM.chekValA = BANCS.INPUT.chekValA
	endif
	
	if((CUST.CLIMM.insProvider=="SLFL ON CREDIT") and (CUST.CLIMM.credPeriod==0)) then
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Credit period should be greater than 0.^credPeriod"			
		GOTO ENDOFSCRIPT
	endif
	
	if((CUST.CLIMM.insProvider=="SLFL ON CREDIT") and (CUST.CLIMM.credAmt==0)) then
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Credit Amount should be greater than 0.^credAmt"			
		GOTO ENDOFSCRIPT
	endif

if(CUST.CLIMM.funcCode == "A") then
#{
	sv_s = "auditRefNum|select custom.c_ls_adt_Seq.nextval from dual"
	sv_r = urhk_dbSelectWithBind(sv_s)
	print(sv_r)
	if(sv_r == 0) then
	#{
		CUST.CLIMM.auditRefNum = BANCS.OUTPARAM.auditRefNum
	#}
	else
	#{
		CUST.CLIMM.auditRefNum = ""
	#}
	endif
	
	CUST.CLIMM.srl = "0"
	
	sv_q = "txtrecCount2|"
	sv_q = sv_q + "select count(*) from CUSTOM.CIMM_MOD_TBL "
	sv_q = sv_q + "where asset_id = '" +CUST.CLIMM.assetId+ "' and cif_id = '" + CUST.CLIMM.cifId + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
	sv_q = sv_q + "and del_flg = 'N' and entity_cre_flg = 'N' "
	PRINT(sv_q)

	sv_z = urhk_dbSelectWithBind(sv_q)
	print(sv_z)
	
	IF (sv_z == 0) THEN
	#{
		sv_x = 1
		CUST.CLIMM.txtrecCount2 = BANCS.OUTPARAM.txtrecCount2
		print(CUST.CLIMM.txtrecCount2)
		
		IF(CUST.CLIMM.txtrecCount2 == "0") THEN
	#{
	sv_q = "txtrecCount|"
	sv_q = sv_q + "select count(*) from CUSTOM.CIMM_TBL "
	sv_q = sv_q + "where asset_id = '" +CUST.CLIMM.assetId+ "' and cif_id = '" + CUST.CLIMM.cifId + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
	sv_q = sv_q + "and del_flg = 'N' and entity_cre_flg = 'Y' "
	PRINT(sv_q)

	sv_z = urhk_dbSelectWithBind(sv_q)
	print(sv_z)
	
	IF (sv_z == 0) THEN
	#{
		sv_x = 1
		CUST.CLIMM.txtrecCount = BANCS.OUTPARAM.txtrecCount
		print(CUST.CLIMM.txtrecCount)
		
		IF(CUST.CLIMM.txtrecCount == "0") THEN
		#{
		
			sv_a = ""
			sv_a = sv_a + "insId|select "
			sv_a = sv_a + "CONCAT('I',LPAD(NEXTVAL('custom.insId'),9,'0')) from dual"
			print(sv_a)
			
			sv_b = urhk_dbSelectWithBind(sv_a)
			print(sv_b)
			
			IF(sv_b != 0) THEN
			#{
				CUST.CLIMM.isError = "Y"
				LIN.DATA.errMsg = "Insurance Id generation Failed."			
				GOTO ENDOFSCRIPT
			#}
			ENDIF
			
			CUST.CLIMM.insId = BANCS.OUTPARAM.insId
			print(CUST.CLIMM.insId)
			
			sv_a = ""
			sv_a = sv_a + "comission_Val|select variable_value from custom.CIPM_TBL"
			sv_a = sv_a + " where "
			sv_a = sv_a + " variable_name ='" +CUST.CLIMM.insName+ "' and module_name='CLIMM' and sub_module_name='COMISSION_VALUE' and del_flg='N' "
			PRINT(sv_a)
			
			sv_b = urhk_dbSelectWithBind(sv_a)
			PRINT(sv_b)
	
			IF(sv_b==0) then
			#{
				CUST.CLIMM.comission_Val = BANCS.OUTPARAM.comission_Val
				print(CUST.CLIMM.comission_Val)
	
				CUST.CLIMM.comissionAmt = cdouble(CUST.CLIMM.premiumAmt) * cdouble(CUST.CLIMM.comission_Val)/100.00
				print(CUST.CLIMM.comissionAmt)
			#}
			else
			#{
				CUST.CLIMM.isError = "Y"
				BANCS.OUTPUT.successOrFailure = "F"
				CUST.CLIMM.errMsg = "Insertion Failed"
				#sv_u = urhk_SetOrbErr("RESULT_MSG|Insertion Failed")
				#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
				GOTO ENDOFSCRIPT
			#}
			endif
			
			call("climm_table_add.scr")
		
		
			sv_s = " insert into custom.CIMM_MOD_TBL (ins_id,cif_id,asset_grp_id,asset_id,ins_done_by,ins_policy_no,ins_company,policy_type,policy_start_date,policy_end_date,cover_note_no, "
			sv_s = sv_s + " cover_note_exp_date,premium_amt,ins_amt,ins_cr_amt,cr_period,comission_amt,entity_cre_flg,del_flg,version_no,status,lchg_user_id,lchg_time,rcre_user_id,rcre_time,srl_num) values( "
			sv_s = sv_s + " '"+ CUST.CLIMM.insId +"','"+ CUST.CLIMM.cifId +"','"+ CUST.CLIMM.assetGrpId +"','"+ CUST.CLIMM.assetId +"','"+ CUST.CLIMM.insProvider +"','"+ CUST.CLIMM.insPolicyNo +"' , "
			sv_s = sv_s + " '"+ CUST.CLIMM.insName +"','"+ CUST.CLIMM.policyType +"',to_date('"+ CUST.CLIMM.startDate +"','dd-mm-yyyy'),to_date('"+ CUST.CLIMM.endDate +"','dd-mm-yyyy') , "
			sv_s = sv_s + " '"+ CUST.CLIMM.noteNo +"',to_date('"+ CUST.CLIMM.expiryDate +"','dd-mm-yyyy'),'"+ CUST.CLIMM.premiumAmt +"', "
			sv_s = sv_s + " '"+ CUST.CLIMM.insAmt +"','"+ CUST.CLIMM.credAmt +"','"+ CUST.CLIMM.credPeriod +"','"+ CUST.CLIMM.comissionAmt +"','N','N', '1',null,'"+ BANCS.STDIN.userId +"', "
			sv_s = sv_s + " sysdate,null,null,'"+CUST.CLIMM.srl+"') "
			
			print(sv_s)
			sv_d = urhk_dbsqlWithBind(sv_s)
			print(sv_d)
			
			if(sv_d==0) then
			#{
			
				CUST.CLIMM.mainTblCols = "ins_id!" + CUST.CLIMM.insId
				CUST.CLIMM.modTblCols = "ins_id!" + CUST.CLIMM.insId
				CUST.CLIMM.mainTblName = "CUST_INS_MASTER_MAINT"
				CUST.CLIMM.modTblName = "CUST_INS_MASTER_MAINT_MOD"
				CUST.CLIMM.auditSolId = BANCS.STDIN.mySolId
				CUST.CLIMM.entryUser = BANCS.STDIN.userId
				CUST.CLIMM.menuId = BANCS.STDIN.menuId
				CUST.CLIMM.tableKey = CUST.CLIMM.insId
				
				
				sv_s = "TmpStr | select custom.c_clsgspm_adtAddFnc('" + CUST.CLIMM.mainTblName + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.modTblName + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.mainTblCols + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.modTblCols + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.auditRefNum + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.auditSolId + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.entryUser + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.menuId + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.tableKey + "') from dual "
				sv_r = urhk_dbSelectWithBind(sv_s)
				print(sv_r)
				if(sv_r == 0) then
				#{
					CUST.CLIMM.TmpStr = BANCS.OUTPARAM.TmpStr
				#}
				else
				#{
					CUST.CLIMM.TmpStr = ""
				#}
				endif
				BANCS.OUTPUT.successOrFailure = "S"
				CUST.CLIMM.successMsg = "Insurance created successfully.Insurance Id is "+CUST.CLIMM.insId
				#sv_u = urhk_SetOrbOut("RESULT_MSG|"+CUST.CLIMM.successMsg + " ")
				#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
				GOTO ENDOFSCRIPT
			#}
			else
			#{
				CUST.CLIMM.isError = "Y"
				BANCS.OUTPUT.successOrFailure = "F"
				CUST.CLIMM.errMsg = "Insertion Failed"
				#sv_u = urhk_SetOrbErr("RESULT_MSG|"+ CUST.CLIMM.errMsg)
				#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
				
				GOTO ENDOFSCRIPT
			#}
			endif
			
			
		#}
		else
		#{
			CUST.CLIMM.isError = "Y"
			BANCS.OUTPUT.successOrFailure = "F"
			CUST.CLIMM.errMsg = "Insurance Module already exists for the combination"
			#sv_u = urhk_SetOrbErr("RESULT_MSG|" + CUST.CLIMM.errMsg)
			#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
			GOTO ENDOFSCRIPT
		#}
		endif
#}
else
#{
	CUST.CLIMM.isError = "Y"
	BANCS.OUTPUT.successOrFailure = "F"
	CUST.CLIMM.errMsg = "Insurance Module already exists for the combination"
	#sv_u = urhk_SetOrbErr("RESULT_MSG| " + CUST.CLIMM.errMsg)
	#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
	GOTO ENDOFSCRIPT

#}
endif
#}
else
#{
	CUST.CLIMM.isError = "Y"
	BANCS.OUTPUT.successOrFailure = "F"
	CUST.CLIMM.errMsg = "Verification pending for existing combination"
	#sv_u = urhk_SetOrbErr("RESULT_MSG|" + CUST.CLIMM.errMsg)
	#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
	GOTO ENDOFSCRIPT
#}
endif
#}
else
#{
	CUST.CLIMM.isError = "Y"
	BANCS.OUTPUT.successOrFailure = "F"
	CUST.CLIMM.errMsg = "Query Execution Failed"
	#sv_u = urhk_SetOrbErr("RESULT_MSG|" + CUST.CLIMM.errMsg)
	#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
	GOTO ENDOFSCRIPT
#}
endif
#}
endif

if(CUST.CLIMM.funcCode == "M") then
#{

		sv_s =""
		sv_s = sv_s + "srl| "
		sv_s = sv_s + "select max(srl_num) from custom.cimm_mod_tbl where "
		sv_s = sv_s + "asset_id = '" +CUST.CLIMM.assetId+ "' and cif_id = '" + CUST.CLIMM.cifId + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
		sv_s = sv_s + "and del_flg = 'N' and entity_cre_flg = 'N' and ins_id='" + CUST.CLIMM.insId + "' "
		
		print(sv_s)
		sv_d = urhk_dbselectWithBind(sv_s)
		print(sv_d)
		
		if(sv_d==0) then
		#{
			CUST.CLIMM.srl= BANCS.OUTPARAM.srl
		#}
		else
		#{
			CUST.CLIMM.srl= 0
		#}
		endif
		
		print(CUST.CLIMM.srl)
	call("climm_table_modify.scr")
	
	print(CUST.CLIMM.insId)
	print(CUST.CLIMM.cifId)
	print(CUST.CLIMM.assetGrpId)
	print(CUST.CLIMM.assetId)
	print(CUST.CLIMM.insProvider)
	sv_s = "update custom.CIMM_MOD_TBL set "
	sv_s = sv_s + " ins_policy_no = '"+ CUST.CLIMM.insPolicyNo +"' ,ins_done_by='"+CUST.CLIMM.insProvider+"', "
	sv_s = sv_s + "ins_company = '"+ CUST.CLIMM.insName +"',policy_type = '"+ CUST.CLIMM.policyType +"',policy_start_date = to_date('"+ CUST.CLIMM.startDate +"','dd-mm-yyyy'),policy_end_date = to_date('"+ CUST.CLIMM.endDate +"','dd-mm-yyyy') , "
	sv_s = sv_s + "cover_note_no = '"+ CUST.CLIMM.noteNo +"', cover_note_exp_date = to_date('"+ CUST.CLIMM.expiryDate +"','dd-mm-yyyy'),premium_amt = '"+ CUST.CLIMM.premiumAmt +"', "
	sv_s = sv_s + "ins_cr_amt = '"+ CUST.CLIMM.credAmt +"' , "
	sv_s = sv_s + "cr_period = '"+ CUST.CLIMM.credPeriod +"', "
	sv_s = sv_s + "ins_amt = '"+ CUST.CLIMM.insAmt +"',comission_amt = '"+ CUST.CLIMM.comissionAmt +"' "
	sv_s = sv_s + "where ins_id = '"+ CUST.CLIMM.insId +"'and cif_id = '"+ CUST.CLIMM.cifId +"' and asset_grp_id = '"+ CUST.CLIMM.assetGrpId +"' and asset_id = '"+  CUST.CLIMM.assetId +"' "
	
	print(sv_s)
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	
	if(sv_d==0) then
	#{
		BANCS.OUTPUT.successOrFailure = "S"
		CUST.CLIMM.successMsg = "Insurance Details Modified successfully"
		#sv_u = urhk_SetOrbOut("RESULT_MSG| " + " ")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
		GOTO ENDOFSCRIPT
	#}
	else
	#{
		LIN.DATA.isError = "Y"
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg = "Modification Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
#}
endif

if(CUST.CLIMM.funcCode=="V") then
#{
	call("climm_validation.scr")
	
	if(CUST.CLIMM.isError == "Y") then
	#{
		GOTO ENDOFSCRIPT
	#}
	else
	#{
		call("climm_table_verify.scr")
	#}
	ENDIF
	CUST.CLIMM.mainTblName = "CUST_INS_MASTER_MAINT"
	CUST.CLIMM.menuId = BANCS.STDIN.menuId
	CUST.CLIMM.tableKey = CUST.CLIMM.insId

	sv_s = "ref_num|select max(ref_num)from custom.C_LS_ADT where table_name='" + CUST.CLIMM.mainTblName + "' "
	sv_s = sv_s + " and table_key='" + CUST.CLIMM.tableKey + "' "
	sv_s = sv_s + " and mop_id='" + CUST.CLIMM.menuId + "' and rmks is null "
	sv_r = urhk_dbSelectWithBind(sv_s)
	print(sv_r)
	if(sv_r == 0) then
	#{
		CUST.CLIMM.ref_num = BANCS.OUTPARAM.ref_num	
	#}
	else
	#{
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg = "Error Fetching Audit Details"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Error Fetching Audit Details")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
	sv_s = " update custom.CIMM_MOD_TBL set rcre_user_id = '" +BANCS.STDIN.userId +"', " 
	sv_s = sv_s + "rcre_time = sysdate, entity_cre_flg='Y' "
	sv_s = sv_s + "where asset_id = '" +CUST.CLIMM.assetId+ "' and ins_id = '" + CUST.CLIMM.insId + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
	sv_s = sv_s + "and del_flg = 'N' and entity_cre_flg = 'N' "
	
	print(sv_s)
	
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	
	if(sv_d==0) then
	#{
		sv_r = " insert into custom.CIMM_TBL " 
		sv_r = sv_r + "select * from custom.CIMM_MOD_TBL  "
		sv_r = sv_r + "where asset_id = '" +CUST.CLIMM.assetId+ "' and ins_id = '" + CUST.CLIMM.insId + "'"
		sv_r = sv_r + " and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
        	sv_r = sv_r + "and del_flg = 'N' and entity_cre_flg = 'Y' "

		
		print(sv_r)
	
	    sv_q = urhk_dbsqlWithBind(sv_r)
	    print(sv_q)
		
		if(sv_q==0) then
	    #{
			BANCS.OUTPUT.successOrFailure = "S"
			CUST.CLIMM.successMsg="Insurance verified successfully. Insurance Id: " + CUST.CLIMM.insId
			#sv_u = urhk_SetOrbOut("RESULT_MSG|Insurance verified successfully. Insurance Id: " + CUST.CLIMM.insId + " ")
			sv_r = "delete from custom.CIMM_MOD_TBL  "
			sv_r = sv_r + "where asset_id = '" +CUST.CLIMM.assetId+ "' and ins_id = '" + CUST.CLIMM.insId + "'"
			sv_r = sv_r + " and ins_done_by= '" + CUST.CLIMM.insProvider + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
			sv_r = sv_r + "and del_flg = 'N' and entity_cre_flg = 'Y' "
			print(sv_r)
			sv_q = urhk_dbsqlWithBind(sv_r)
			print(sv_q)
			if(sv_q==0) then
			#{
				#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
				print("success")
			#}
			ELSE
			#{
				CUST.CLIMM.isError = "Y"
				BANCS.OUTPUT.successOrFailure = "F"
				CUST.CLIMM.errMsg = "Query Execution Failed"
				#sv_u = urhk_SetOrbErr("RESULT_MSG|Query Execution Failed")
				#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
				GOTO ENDOFSCRIPT

			#}
			endif
			sv_s = "TmpStr | select custom.c_clsgspm_adtVrfyXcnFnc('" + CUST.CLIMM.ref_num + "', "
			sv_s = sv_s + " '" + BANCS.STDIN.userId + "', "
			sv_s = sv_s + " 'V') from dual "
			sv_r = urhk_dbSelectWithBind(sv_s)
			print(sv_r)
			if(sv_r == 0) then
			#{
				CUST.CLIMM.TmpStr = BANCS.OUTPARAM.TmpStr
			#}
			else
			#{
				CUST.CLIMM.TmpStr = ""
			#}
			endif
			#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
			GOTO ENDOFSCRIPT
		#}
		else
		#{
			CUST.CLIMM.isError = "Y"
			BANCS.OUTPUT.successOrFailure = "F"
			CUST.CLIMM.errMsg = "Query Execution Failed"
			#sv_u = urhk_SetOrbErr("RESULT_MSG|Query Execution Failed")
			#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
			GOTO ENDOFSCRIPT
		#}
		endif
	#}
	else
	#{
		CUST.CLIMM.isError = "Y"
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg = "Verification Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Verification Failed")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
	
#}
endif

if(CUST.CLIMM.funcCode=="D") then
#{

	call("climm_table_delete.scr")
	sv_s = " delete custom.CIMM_MOD_TBL "
	sv_s = sv_s + "where ins_id = '" + CUST.CLIMM.insId + "' and del_flg='N' and srl_num=(select max(srl_num) from custom.cimm_mod_tbl where ins_id='" + CUST.CLIMM.insId + "' and del_flg='N') "
	sv_s = sv_s + "and del_flg = 'N' and entity_cre_flg = 'Y' "
	
	print(sv_s)
	
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	sv_s = " update custom.CIMM_TBL set rcre_user_id = '" +BANCS.STDIN.userId +"', " 
	sv_s = sv_s + "rcre_time = sysdate, del_flg='Y' "
	sv_s = sv_s + "where ins_id = '" + CUST.CLIMM.insId + "' and srl_num=(select max(srl_num) from custom.cimm_tbl where ins_id='" + CUST.CLIMM.insId + "' and del_flg='N') "
	sv_s = sv_s + "and del_flg = 'N' and entity_cre_flg = 'Y' "
	
	print(sv_s)
	
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	
	if(sv_d==0) then
	#{
		BANCS.OUTPUT.successOrFailure = "S"
		CUST.CLIMM.successMsg = "Inuarance Deleted successfully.Insurance Id: " + CUST.CLIMM.insId
		#sv_u = urhk_SetOrbOut("RESULT_MSG|Inuarance Deleted successfully.Insurance Id: " + CUST.CLIMM.insId + " ")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
		GOTO ENDOFSCRIPT
	#}
	else
	#{
		CUST.CLIMM.isError = "Y"
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg="Deletion Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Deletion Failed")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
	
#}
endif

if(CUST.CLIMM.funcCode=="X") then
#{
	CUST.CLIMM.mainTblName = "CUST_INS_MASTER_MAINT"
	CUST.CLIMM.menuId = BANCS.STDIN.menuId
	CUST.CLIMM.tableKey = CUST.CLIMM.insId

	sv_s = "ref_num|select ref_num from custom.C_LS_ADT where table_name='" + CUST.CLIMM.mainTblName + "' "
	sv_s = sv_s + " and table_key='" + CUST.CLIMM.tableKey + "' "
	sv_s = sv_s + " and mop_id='" + CUST.CLIMM.menuId + "' and rmks is null "
	sv_r = urhk_dbSelectWithBind(sv_s)
	print(sv_r)
	if(sv_r == 0) then
	#{
		CUST.CLIMM.ref_num = BANCS.OUTPARAM.ref_num	
	#}
	else
	#{
		CUST.CLIMM.isError = "Y"
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg="Error Fetching Audit Details"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Error Fetching Audit Details")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
	
	call("climm_table_cancel.scr")
	sv_s = " delete custom.CIMM_MOD_TBL "
	sv_s = sv_s + "where ins_id = '" + CUST.CLIMM.insId + "' and srl_num=(select max(srl_num) from custom.cimm_mod_tbl where ins_id='" + CUST.CLIMM.insId + "' and del_flg='N' and entity_cre_flg = 'N') "
	sv_s = sv_s + "and del_flg = 'N' and entity_cre_flg = 'N' "
	
	print(sv_s)
	
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	
	if(sv_d==0) then
	#{
		sv_s = "TmpStr | select custom.c_clsgspm_adtVrfyXcnFnc('" + CUST.CLIMM.ref_num + "', "
		sv_s = sv_s + " '" + BANCS.STDIN.userId + "', "
		sv_s = sv_s + " 'X') from dual "
		sv_r = urhk_dbSelectWithBind(sv_s)
		print(sv_r)
		if(sv_r == 0) then
		#{
			CUST.CLIMM.TmpStr = BANCS.OUTPARAM.TmpStr
		#}
		else
		#{
			CUST.CLIMM.TmpStr = ""
		#}
		endif
		BANCS.OUTPUT.successOrFailure = "S"
		CUST.CLIMM.successMsg="Insurance Record Cancelled successfully"
		#sv_u = urhk_SetOrbOut("RESULT_MSG|Insurance Record Cancelled successfully" + " ")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
		GOTO ENDOFSCRIPT
	#}
	else
	#{
		CUST.CLIMM.isError = "Y"
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg = "Cancellation Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Cancellation Failed")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif
	
#}
endif

if(CUST.CLIMM.funcCode=="I") then
#{
	BANCS.OUTPUT.successOrFailure = "S"
	CUST.CLIMM.successMsg = "Inuarance Record Inquired successfully"
	#sv_u = urhk_SetOrbOut("RESULT_MSG|Inuarance Record Inquired successfully" + " ")
	#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
	GOTO ENDOFSCRIPT
	
#}
endif

if(CUST.CLIMM.funcCode == "N") then
#{
	sv_q = "txtrecCount|"
	sv_q = sv_q + "select count(*) from CUSTOM.CIMM_TBL "
	sv_q = sv_q + "where asset_id = '" +CUST.CLIMM.assetId+ "' and cif_id = '" + CUST.CLIMM.cifId + "' and asset_grp_id='" + CUST.CLIMM.assetGrpId + "' "
	sv_q = sv_q + "and del_flg = 'N' and entity_cre_flg = 'Y' "
	PRINT(sv_q)

	sv_z = urhk_dbSelectWithBind(sv_q)
	print(sv_z)
	
	IF (sv_z == 0) THEN
	#{
		sv_x = 1
		CUST.CLIMM.txtrecCount = BANCS.OUTPARAM.txtrecCount
		print(CUST.CLIMM.txtrecCount)
		
		if(CUST.CLIMM.txtrecCount==0) then
		#{
			BANCS.OUTPUT.successOrFailure = "F"
			CUST.CLIMM.errMsg="Nothing To Renew"
			GOTO ENDOFSCRIPT
		#}
		endif
		
		CUST.CLIMM.srl = CUST.CLIMM.txtrecCount
		print(CUST.CLIMM.srl)
	#}
	else
	#{
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.errMsg="Query Execution Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Query Execution Failed")
		#sv_u = urhk_SetOrbErr("SuccessOrFailure|N")
		GOTO ENDOFSCRIPT
	#}
	endif
		
	sv_s = "auditRefNum|select custom.c_ls_adt_Seq.nextval from dual"
	sv_r = urhk_dbSelectWithBind(sv_s)
	print(sv_r)
	if(sv_r == 0) then
	#{
		CUST.CLIMM.auditRefNum = BANCS.OUTPARAM.auditRefNum
	#}
	else
	#{
		CUST.CLIMM.auditRefNum = ""
	#}
	endif
	
	call("climm_table_renew.scr")


	sv_s = " insert into custom.CIMM_MOD_TBL (ins_id,cif_id,asset_grp_id,asset_id,ins_done_by,ins_policy_no,ins_company,policy_type,policy_start_date,policy_end_date,cover_note_no, "
	sv_s = sv_s + " cover_note_exp_date,premium_amt,ins_amt,ins_cr_amt,cr_period,comission_amt,entity_cre_flg,del_flg,version_no,status,lchg_user_id,lchg_time,rcre_user_id,rcre_time,srl_num) values( "
	sv_s = sv_s + " '"+ CUST.CLIMM.insId +"','"+ CUST.CLIMM.cifId +"','"+ CUST.CLIMM.assetGrpId +"','"+ CUST.CLIMM.assetId +"','"+ CUST.CLIMM.insProvider +"','"+ CUST.CLIMM.insPolicyNo +"' , "
	sv_s = sv_s + " '"+ CUST.CLIMM.insName +"','"+ CUST.CLIMM.policyType +"',to_date('"+ CUST.CLIMM.startDate +"','dd-mm-yyyy'),to_date('"+ CUST.CLIMM.endDate +"','dd-mm-yyyy') , "
	sv_s = sv_s + " '"+ CUST.CLIMM.noteNo +"',to_date('"+ CUST.CLIMM.expiryDate +"','dd-mm-yyyy'),'"+ CUST.CLIMM.premiumAmt +"', "
	sv_s = sv_s + " '"+ CUST.CLIMM.insAmt +"','"+ CUST.CLIMM.credAmt +"','"+ CUST.CLIMM.credPeriod +"','"+ CUST.CLIMM.comissionAmt +"','N','N', '1',null,'"+ BANCS.STDIN.userId +"', "
	sv_s = sv_s + " sysdate,null,null,'"+CUST.CLIMM.srl+"') "
	
	print(sv_s)
	sv_d = urhk_dbsqlWithBind(sv_s)
	print(sv_d)
	
	if(sv_d==0) then
	#{
		
		CUST.CLIMM.mainTblCols = "ins_id!" + CUST.CLIMM.insId
				CUST.CLIMM.modTblCols = "ins_id!" + CUST.CLIMM.insId
				CUST.CLIMM.mainTblName = "CUST_INS_MASTER_MAINT"
				CUST.CLIMM.modTblName = "CUST_INS_MASTER_MAINT_MOD"
				CUST.CLIMM.auditSolId = BANCS.STDIN.mySolId
				CUST.CLIMM.entryUser = BANCS.STDIN.userId
				CUST.CLIMM.menuId = BANCS.STDIN.menuId
				CUST.CLIMM.tableKey = CUST.CLIMM.insId
				
				
				sv_s = "TmpStr | select custom.c_clsgspm_adtAddFnc('" + CUST.CLIMM.mainTblName + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.modTblName + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.mainTblCols + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.modTblCols + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.auditRefNum + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.auditSolId + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.entryUser + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.menuId + "', "
				sv_s = sv_s + " '" + CUST.CLIMM.tableKey + "') from dual "
				sv_r = urhk_dbSelectWithBind(sv_s)
				print(sv_r)
				if(sv_r == 0) then
				#{
					CUST.CLIMM.TmpStr = BANCS.OUTPARAM.TmpStr
				#}
				else
				#{
					CUST.CLIMM.TmpStr = ""
				#}
				endif
				
		BANCS.OUTPUT.successOrFailure = "S"
		CUST.CLIMM.successMsg="Insurance Policy Renewed successfully.Insurance Id is "+CUST.CLIMM.insId
		#sv_u = urhk_SetOrbOut("RESULT_MSG|Insurance Policy Renewed successfully.Insurance Id is "+CUST.CLIMM.insId + " ")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")
		GOTO ENDOFSCRIPT
	#}
	else
	#{
		BANCS.OUTPUT.successOrFailure = "F"
		CUST.CLIMM.isError = "Y"
		CUST.CLIMM.errMsg="Renewal Failed"
		#sv_u = urhk_SetOrbErr("RESULT_MSG|Renewal Failed")
		#sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
		GOTO ENDOFSCRIPT
	#}
	endif

#}
endif


ENDOFSCRIPT:

IF(CUST.CLIMM.isError == "Y") THEN
	#{
		sv_u = urhk_SetOrbOut("Error|Y" + " ")
		sv_c = "Error_1|ERROR^" + CUST.CLIMM.errMsg + "^fileName"
		sv_u = urhk_SetOrbOut(sv_c + " ")
		sv_u = urhk_SetOrbOut("SuccessOrFailure|N" + " ")
	#}
	ELSE
	#{	
		print(CUST.CLIMM.successMsg)	
		sv_k = CUST.CLIMM.successMsg
        sv_u = "RESULT_MSG|"+sv_k
		print(sv_u)
        sv_u = urhk_SetOrbOut(sv_u + " ")
        BANCS.OUTPUT.successOrFailure = "S"
        sv_u = urhk_SetOrbOut("SuccessOrFailure|Y" + " ")

	#}
	ENDIF
	
	#if(CUST.CLIMM.isError != "Y") then
	##{
	#	CUST.CLIMM.insId = " "
	##}
	#endif
	
	BANCS.OUTPUT.insId = CUST.CLIMM.insId
	BANCS.OUTPUT.isError = CUST.CLIMM.isError
	print(BANCS.OUTPUT.isError)
	BANCS.OUTPUT.successMsg = CUST.CLIMM.successMsg
	BANCS.OUTPUT.errMsg = CUST.CLIMM.errMsg
	
	IF (CLASSEXISTS("CUST", "CLIMM") != 0) THEN
	#{
		DELETECLASS("CUST", "CLIMM")
	#}
	ENDIF
	
	IF (REPEXISTS("CUST") != 0) THEN
	#{
		DELETEREP("CUST")
	#}
	ENDIF

#trace off
end-->
