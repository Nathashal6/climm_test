<--start

trace on


	sv_s = urhk_B2k_printRepos("BANCS")
	PRINT(sv_s)

	
	if(fieldexists(BANCS.INPUT.funcCode) ==0) THEN
		BANCS.INPUT.funcCode = ""
	endif
	if(fieldexists(BANCS.INPUT.cifId) ==0) THEN
		BANCS.INPUT.cifId = ""
	endif
	
	if(fieldexists(BANCS.INPUT.assetId) ==0) THEN
		BANCS.INPUT.assetId = ""
	endif
	if(fieldexists(BANCS.INPUT.assetGrpId) ==0) THEN
		BANCS.INPUT.assetGrpId = ""
	endif
	
	if(fieldexists(BANCS.INPUT.insProviderSrlNo) ==0) THEN
		BANCS.INPUT.insProviderSrlNo = ""
	endif
	if(fieldexists(BANCS.INPUT.policyType) ==0) THEN
		BANCS.INPUT.policyType = ""
	endif
	
	if(fieldexists(BANCS.INPUT.insProvider) ==0) THEN
		BANCS.INPUT.insProvider = ""
	endif
	if(fieldexists(BANCS.INPUT.startDate) ==0) THEN
		BANCS.INPUT.startDate = ""
	endif
	
	if(fieldexists(BANCS.INPUT.endDate) ==0) THEN
		BANCS.INPUT.endDate = ""
	endif
	if(fieldexists(BANCS.INPUT.noteNo) ==0) THEN
		BANCS.INPUT.noteNo = ""
	endif
	
	if(fieldexists(BANCS.INPUT.expiryDate) ==0) THEN
		BANCS.INPUT.expiryDate = ""
	endif
	if(fieldexists(BANCS.INPUT.credAmt) ==0) THEN
		BANCS.INPUT.credAmt = "0"
	endif
	
	if(fieldexists(BANCS.INPUT.comissionAmt) ==0) THEN
		BANCS.INPUT.comissionAmt = ""
	endif
	
	if(fieldexists(BANCS.INPUT.insAmt) ==0) THEN
		BANCS.INPUT.insAmt = ""
	endif
	if(fieldexists(BANCS.INPUT.premiumAmt) ==0) THEN
		BANCS.INPUT.premiumAmt = ""
	endif
	
	if(fieldexists(BANCS.INPUT.credPeriod) ==0) THEN
		BANCS.INPUT.credPeriod = "0"
	endif
		if(fieldexists(BANCS.INPUT.insPolicyNo) ==0) THEN
		BANCS.INPUT.insPolicyNo = ""
	endif
	if(fieldexists(BANCS.INPUT.policyDescA) ==0) THEN
		BANCS.INPUT.policyDesc = ""
	endif
	if(fieldexists(BANCS.INPUT.chekValA) ==0) THEN
		BANCS.INPUT.chekValA = ""
	endif
	#if(fieldexists(BANCS.INPUT.insCover2) ==0) THEN
	#	BANCS.INPUT.insCover2 = 0
	#endif

	
	IF (REPEXISTS("LINREP") == 0) THEN
	#{
		CREATEREP("LINREP")
	#}
	ENDIF
	IF (CLASSEXISTS("LINREP", "DATA") == 0) THEN
	#{
		CREATECLASS("LINREP", "DATA", 5)
	#}
	ENDIF
	
	sv_a =  " "
	sv_a =  sv_a + "countData|select count(*) "
	sv_a =  sv_a + "from custom.cust_setvar_maint "
	sv_a =  sv_a + "where module_name ='INSURANCE' "
	sv_a =  sv_a + "and sub_module_name = 'COVERTYPE' "
	sv_a =  sv_a + "and type='TEXT'"
	print(sv_a)

	sv_z = urhk_dbSelectWithBind(sv_a)
	print(sv_z)
	
	IF (sv_z == 0) THEN
	#{
		LINREP.DATA.insCover2 = BANCS.OUTPARAM.countData
		print(LINREP.DATA.insCover2)
	
	#}
	endif
	print(BANCS.INPUT.credAmt)
	LINREP.DATA.funcCode		= BANCS.INPUT.funcCode
	LINREP.DATA.cifId		= BANCS.INPUT.cifId
	LINREP.DATA.assetId        = BANCS.INPUT.assetId
	LINREP.DATA.assetGrpId     = BANCS.INPUT.assetGrpId
	LINREP.DATA.insProviderSrlNo  = BANCS.INPUT.insProviderSrlNo
	LINREP.DATA.policyType		= BANCS.INPUT.policyType
	LINREP.DATA.insProvider		= BANCS.INPUT.insProvider
	LINREP.DATA.startDate        = BANCS.INPUT.startDate
	LINREP.DATA.endDate     = BANCS.INPUT.endDate
	LINREP.DATA.noteNo     = BANCS.INPUT.noteNo
	LINREP.DATA.expiryDate  = BANCS.INPUT.expiryDate
	LINREP.DATA.credAmt		= BANCS.INPUT.credAmt
	LINREP.DATA.comissionAmt		= BANCS.INPUT.comissionAmt
	LINREP.DATA.insAmt        = BANCS.INPUT.insAmt
	LINREP.DATA.premiumAmt     = BANCS.INPUT.premiumAmt
	LINREP.DATA.credPeriod  = BANCS.INPUT.credPeriod
	LINREP.DATA.insPolicyNo  = BANCS.INPUT.insPolicyNo
	LINREP.DATA.policyDescA  = BANCS.INPUT.policyDescA
	LINREP.DATA.chekValA  = BANCS.INPUT.chekValA
	
	BANCS.INPUT.funcCode	 = LINREP.DATA.funcCode
	BANCS.INPUT.cifId		 = LINREP.DATA.cifId
	BANCS.INPUT.assetId      = LINREP.DATA.assetId
	BANCS.INPUT.assetGrpId   = LINREP.DATA.assetGrpId
	BANCS.INPUT.insProviderSrlNo      = LINREP.DATA.insProviderSrlNo
	BANCS.INPUT.policyType   = LINREP.DATA.policyType
	BANCS.INPUT.insProvider	 = LINREP.DATA.insProvider
	BANCS.INPUT.startDate    = LINREP.DATA.startDate
	BANCS.INPUT.endDate      = LINREP.DATA.endDate
	BANCS.INPUT.noteNo      = LINREP.DATA.noteNo
	BANCS.INPUT.expiryDate   = LINREP.DATA.expiryDate
	BANCS.INPUT.credAmt		 = LINREP.DATA.credAmt
	BANCS.INPUT.comissionAmt = LINREP.DATA.comissionAmt
	BANCS.INPUT.insAmt       = LINREP.DATA.insAmt
	BANCS.INPUT.premiumAmt   = LINREP.DATA.premiumAmt
	BANCS.INPUT.credPeriod   = LINREP.DATA.credPeriod
	BANCS.INPUT.insPolicyNo  		 = LINREP.DATA.insPolicyNo
	BANCS.INPUT.policyDescA = LINREP.DATA.policyDescA
	BANCS.INPUT.chekValA  = LINREP.DATA.chekValA
	BANCS.INPUT.insCover2  = LINREP.DATA.insCover2
	print(BANCS.INPUT.insCover2)
	call("climm_submit.scr")
	
	PRINT(BANCS.OUTPUT.isError)
	LINREP.DATA.isError 	= BANCS.OUTPUT.isError 	
	LINREP.DATA.errMsg 		= BANCS.OUTPUT.errMsg 
	LINREP.DATA.successMsg 	= BANCS.OUTPUT.successMsg 
	LINREP.DATA.insId 	= BANCS.OUTPUT.insId 

	if(LINREP.DATA.isError == "Y") then
	#{
		GOTO ERRORMSGAPI
	#}
	ENDIF
	BANCS.INPUT.funcCode	 = "V"
	BANCS.INPUT.cifId		 = LINREP.DATA.cifId
	BANCS.INPUT.assetId      = LINREP.DATA.assetId
	BANCS.INPUT.assetGrpId   = LINREP.DATA.assetGrpId
	BANCS.INPUT.insProviderSrlNo      = LINREP.DATA.insProviderSrlNo
	BANCS.INPUT.policyType   = LINREP.DATA.policyType
	BANCS.INPUT.insProvider	 = LINREP.DATA.insProvider
	BANCS.INPUT.startDate    = LINREP.DATA.startDate
	BANCS.INPUT.endDate      = LINREP.DATA.endDate
	BANCS.INPUT.noteNo      = LINREP.DATA.noteNo
	BANCS.INPUT.expiryDate   = LINREP.DATA.expiryDate
	BANCS.INPUT.credAmt		 = LINREP.DATA.credAmt
	BANCS.INPUT.comissionAmt = LINREP.DATA.comissionAmt
	BANCS.INPUT.insAmt       = LINREP.DATA.insAmt
	BANCS.INPUT.premiumAmt   = LINREP.DATA.premiumAmt
	BANCS.INPUT.credPeriod   = LINREP.DATA.credPeriod
	BANCS.INPUT.insId  		 = LINREP.DATA.insId
	BANCS.INPUT.insPolicyNo  		 = LINREP.DATA.insPolicyNo
	BANCS.INPUT.policyDescA = LINREP.DATA.policyDescA
	BANCS.INPUT.chekValA  = LINREP.DATA.chekValA
	BANCS.INPUT.insCover2  = LINREP.DATA.insCover2
	call("climm_submit.scr")
	
	
	LINREP.DATA.isError 	= BANCS.OUTPUT.isError 	
	LINREP.DATA.errMsg 		= BANCS.OUTPUT.errMsg 
	LINREP.DATA.successMsg 	= BANCS.OUTPUT.successMsg 
	LINREP.DATA.insId 	= BANCS.OUTPUT.insId 

	if(LINREP.DATA.isError == "Y") then
	#{
		GOTO ERRORMSGAPI
	#}
	ELSE
	#{
		GOTO SUCCESSMSGAPI
	#}
	ENDIF
	
	ERRORMSGAPI:
		GOTO ENDOFAPI
	
	SUCCESSMSGAPI:
	
		sv_u = urhk_SetOrbOut("INSID|" + LINREP.DATA.insId + " " + " ")
	ENDOFAPI:
		#sv_u = urhk_SetOrbOut("INSID|  " + " ")
trace off

end-->